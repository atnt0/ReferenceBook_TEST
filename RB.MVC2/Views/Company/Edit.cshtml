@model RB.DAL.Models.Companies

<h4>Companies</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="CompanyId" id="CompId" />
            <div class="form-group">
                <label asp-for="CreatedOn" class="control-label"></label>
                <input asp-for="CreatedOn" class="form-control" />
                <span asp-validation-for="CreatedOn" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CompanyName" class="control-label"></label>
                <input asp-for="CompanyName" class="form-control" />
                <span asp-validation-for="CompanyName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ParentCompanyId" class="control-label"></label>
                <select asp-for="ParentCompanyId" class="form-control" asp-items="ViewBag.ParentCompanyId"></select>
                <span asp-validation-for="ParentCompanyId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Director" class="control-label"></label>
                <input asp-for="Director" class="form-control" />
                <span asp-validation-for="Director" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DescriptionShort" class="control-label"></label>
                <input asp-for="DescriptionShort" class="form-control" />
                <span asp-validation-for="DescriptionShort" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DescriptionFull" class="control-label"></label>
                <input asp-for="DescriptionFull" class="form-control" />
                <span asp-validation-for="DescriptionFull" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="WebSite" class="control-label"></label>
                <input asp-for="WebSite" class="form-control" />
                <span asp-validation-for="WebSite" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AddressId" class="control-label"></label>
                <select asp-for="AddressId" class="form-control" asp-items="ViewBag.AddressId"></select>
                <span asp-validation-for="AddressId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Popularity" class="control-label"></label>
                <input asp-for="Popularity" class="form-control" />
                <span asp-validation-for="Popularity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
    <div class="col-md-4">
        <p>
            <button id="createNewEmailBtn" class="btn btn-primary" data-id="@Model.CompanyId">Create New Email</button>
        </p>
        <div class="row"><div id="createNewEmail" class="col-12"></div></div>
        <ul id="newEmail" style="list-style-type:none; padding-left: 0;">
            @foreach (var item in Model.Emails)
            {
                <li>
                    <div>
                        @Html.DisplayFor(modelItem => item.Email)
                        @Html.HiddenFor(modelItem => item.CreatedOn)
                        @Html.HiddenFor(modelItem => item.EmailId)
                        @Html.HiddenFor(modelItem => item.CompanyId)
                        <a asp-action="Edit" asp-route-id="@item.EmailId" class="btn btn-info editEmail" data-id="@item.EmailId">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.EmailId" class="btn btn-danger delEmail" data-id="@item.EmailId">Delete</a>
                    </div>
                </li>
            }
        </ul>
    </div>
    <div class="col-md-4" id="LoadDiv">
        <p>
            <button id="createNewBtn" class="btn btn-primary" data-id="@Model.CompanyId">Create New</button>
        </p>
        <div class="row"><div id="createNew" class="col-12"></div></div>
        <ul id="newPhone" style="list-style-type:none; padding-left: 0;">
            @foreach (var item in Model.Phones)
            {
                <li>
                    <div>
                        @Html.DisplayFor(modelItem => item.PhoneNumber)
                        @Html.HiddenFor(modelItem => item.CreatedOn)
                        @Html.HiddenFor(modelItem => item.PhoneId)
                        @Html.HiddenFor(modelItem => item.CompanyId)
                        <a asp-action="Edit" asp-route-id="@item.PhoneId" class="btn btn-info editPhone" data-id="@item.PhoneId">Edit</a>
                        <a asp-action="Delete" asp-route-id="@item.PhoneId" class="btn btn-danger delPhone" data-id="@item.PhoneId">Delete</a>
                    </div>
                </li>
            }
        </ul>

    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}


<script>
    // Для номеров телефона
    $('#createNewBtn').click(function () {
        let companyId = $(this).attr('data-id');
        $.get('@Url.Action("Create" ,"Phone")', { id: companyId }, function (data) {
				$('#createNew').html(data);
				$('#createNewBtn').prop('disabled', true);
				$('#newPhoneName').focus();
				$('#CanselNewPhone').click(function () {
					$('#createNew').empty();
					$('#createNewBtn').prop('disabled', false);
				});
				$('#CreateNewPhone').click(function () {
					let countErrors = 0;
                    let fname = $('#newPhoneName').val();
                    let companyId = $('#newPhoneId').val();
                    console.log(fname, companyId);
					if (fname.length < 13 || fname.length > 13) {
						$('#newPhoneName').css('border', '2px solid #f00');
                        countErrors++;
					} else { $('#newPhoneName').removeAttr('style'); }

                    if (countErrors == 0) {
                        try {
							$.ajax({
								url: '@Url.Action("CreateNewPhone", "Phone")',
								type: 'post',
								data: {
                                    phoneNumber: fname,
                                    companyId: companyId
								},
								success: function (newdata) {
									$('#CanselNewPhone').click();
                                    $('#newPhone').prepend(newdata);
								}
							});
                        } catch (e) {
							console.log('exception: ', e);
                        }
					}
				});
			});
    });

    $('#newPhone').on('click.edit', '.editPhone', function (e) {
			e.preventDefault();
			$('#CanselNewPhone').click();
			$('#phoneCancel').click();
			let id = $(this).attr('data-id');
			let trtmp = $(this).closest('li').html();
			let tr = $(this).closest('li');

			$.ajax({
				url: '@Url.Action("Edit", "Phone")',
				type: 'get',
				data: {
					id: id
				},
				success: function (data) {
					tr.html(data);
					$('#phoneCancel').click(function () {
						tr.html(trtmp);
					});
					$('#phoneSave').click(function () {
                        let countErrors = 0;
						let fname = $('#newPhoneName').val();
						if (fname.length < 13 || fname.length > 13) {
                            $('#newPhoneName').css('border', '2px solid #f00');
                            countErrors++;
                        } else { $('#newPhoneName').removeAttr('style'); }
                        if (countErrors == 0) {
							$.post(
								'@Url.Action("Save", "Phone")',
								{
									id: id,
									fname: fname
								},
								function (data) {
									tr.html(data);
								}
							);
						}
					});
				}
			});
		});
    @*$('#LoadPhones').click(function () {
        let id = $('#CompId').val();
        console.log(id);
        $.get('@Url.Action("Index", "Phone")', { id: id }, function (data) {
            $('#LoadDiv').html(data);
        })
    })*@

    $('#newPhone').on('click.delete', '.delPhone', function (e) {
			e.preventDefault();

			let el = $(this);
			let id = el.attr('data-id');
            let tr = $(this).closest('li');
               if (confirm('Вы  хотите удалить запись?')) {
                   $.post('@Url.Action("Delete", "Phone")', { id: id }, function (data) {
                       if (data == "OK") {
                           tr.remove();
                       }
                   })
               }
    });

    //для Email
     $('#createNewEmailBtn').click(function () {
        let companyId = $(this).attr('data-id');
        $.get('@Url.Action("Create" ,"Email")', { id: companyId }, function (data) {
				$('#createNewEmail').html(data);
				$('#createNewEmailBtn').prop('disabled', true);
				$('#newEmailName').focus();
				$('#CanselNewEmail').click(function () {
					$('#createNewEmail').empty();
					$('#createNewEmailBtn').prop('disabled', false);
				});
				$('#CreateNewEmail').click(function () {
					let countErrors = 0;
                    let fname = $('#newEmailName').val();
                    let companyId = $('#newCompanyId').val();
                    console.log(fname, companyId);
					if (fname.length < 3 || fname.length > 256) {
						$('#newEmailName').css('border', '2px solid #f00');
                        countErrors++;
					} else { $('#newEmailName').removeAttr('style'); }

                    if (countErrors == 0) {
                        try {
							$.ajax({
								url: '@Url.Action("CreateNewEmail", "Email")',
								type: 'post',
								data: {
                                    emailName: fname,
                                    companyId: companyId
								},
								success: function (newdata) {
									$('#CanselNewEmail').click();
                                    $('#newEmail').prepend(newdata);
								}
							});
                        } catch (e) {
							console.log('exception: ', e);
                        }
					}
				});
			});
    });

    $('#newEmail').on('click.edit', '.editEmail', function (e) {
			e.preventDefault();
			$('#CanselNewEmail').click();
			$('#emailCancel').click();
			let id = $(this).attr('data-id');
			let trtmp = $(this).closest('li').html();
			let tr = $(this).closest('li');

			$.ajax({
				url: '@Url.Action("Edit", "Email")',
				type: 'get',
				data: {
					id: id
				},
				success: function (data) {
					tr.html(data);
					$('#emailCancel').click(function () {
						tr.html(trtmp);
					});
					$('#emailSave').click(function () {
                        let countErrors = 0;
						let fname = $('#newEmailName').val();
						if (fname.length < 3 || fname.length > 256) {
                            $('#newEmailName').css('border', '2px solid #f00');
                            countErrors++;
                        } else { $('#newEmailName').removeAttr('style'); }
                        if (countErrors == 0) {
							$.post(
								'@Url.Action("Save", "Email")',
								{
									id: id,
									fname: fname
								},
								function (data) {
									tr.html(data);
								}
							);
						}
					});
				}
			});
	});

     $('#newEmail').on('click.delete', '.delEmail', function (e) {
			e.preventDefault();

			let el = $(this);
			let id = el.attr('data-id');
            let tr = $(this).closest('li');
               if (confirm('Вы  хотите удалить запись?')) {
                   $.post('@Url.Action("Delete", "Email")', { id: id }, function (data) {
                       if (data == "OK") {
                           tr.remove();
                       }
                   })
               }
    });
</script>
}
