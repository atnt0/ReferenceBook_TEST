@model IEnumerable<RB.DAL.Models.Categories>

@{
    ViewData["Title"] = "Index";
}

<h1>Список категорий</h1>

<p>
    <button id="createNewBtn" class="btn btn-primary">Create New</button>
</p>
<div class="row"><div id="createNew" class="col-12"></div></div>
<table class="table">
    <thead>
        <tr>
            <th >
                @Html.DisplayNameFor(model => model.CategoryName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td class="catName">
                    @Html.DisplayFor(modelItem => item.CategoryName)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.CategoryId" class="btn btn-info editCategory" data-id="@item.CategoryId">Edit</a>
                    <a asp-action="Delete" asp-route-id="@item.CategoryId" class="btn btn-danger delCategory" data-id="@item.CategoryId">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@section Scripts{
    <script>
		$('#createNewBtn').click(function () {
			$.get('@Url.Action("Create")', function (data) {
				$('#createNew').html(data);
				$('#createNewBtn').prop('disabled', true);
				$('#newCategoryName').focus();
				$('#CanselNewCat').click(function () {
					$('#createNew').empty();
					$('#createNewBtn').prop('disabled', false);
				});
				$('#CreateNewCategory').click(function () {
					let countErrors = 0;
					let fname = $('#newCategoryName').val();
					if (fname.length < 3 || fname.length > 256) {
						$('#newCategoryName').css('border', '2px solid #f00');
                        countErrors++;
					} else { $('#newCategoryName').removeAttr('style'); }

                    if (countErrors == 0) {			
                        try {
							$.ajax({
								url: '@Url.Action("CreateNewCat")',
								type: 'post',
								data: {
                                    categoryName: fname
								},
								success: function (newdata) {
									$('#CanselNewCat').click();
									$('tbody').prepend(newdata);
								}
							});
                        } catch (e) {
							console.log('exception: ', e);
                        }
					}
				});
			});
		});

		$('table').on('click.edit', '.editCategory', function (e) {
			e.preventDefault();
			$('#CanselNewCat').click();
			$('#catCancel').click();
			let id = $(this).attr('data-id');
			let trtmp = $(this).closest('tr').html();
			let tr = $(this).closest('tr');					

			$.ajax({
				url: '@Url.Action("Edit")',
				type: 'get',
				data: {
					id: id					
				},
				success: function (data) {
					tr.html(data);
					$('#catCancel').click(function () {
						tr.html(trtmp);
					});
					$('#catSave').click(function () {
                        let countErrors = 0;
						let fname = $('#newCategoryName').val();			
						if (fname.length < 3 || fname.length > 256) {
							$('#newCategoryName').css('border', '2px solid #f00');
                            countErrors++;
						} else { $('#newCategoryName').removeAttr('style'); }				
                        if (countErrors == 0) {
							$.post(
								'@Url.Action("Save")',
								{
									id: id,
									fname: fname							
								},
								function (data) {
									tr.html(data);
								}
							);
						}
					});
				}
			});
		});

        $('table').on('click.delete', '.delCategory', function (e) {
			e.preventDefault();

			let el = $(this);
			let id = el.attr('data-id');		
            let tr = $(this).closest('tr');
               if (confirm('Вы  хотите удалить запись?')) {
                   $.post('@Url.Action("Delete", "Category")', { id: id }, function (data) {
                       if (data == "OK") {
                           tr.remove();
                       }
                   })
               }
		});
    </script>
}